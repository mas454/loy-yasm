(require "lib/read.rb")
(require "lib/loy.rb")
(def string? (a)
     (a.kind_of? String))
(def number? (o)
     (o.kind_of? Numeric))
(def symbol? (o)
     (o.kind_of? Symbol))

(def eq? (a b)
     (a.equal? b))

(def null? (a)
     (a.nil?))





(def (open_input_file path)
     (open path "r"))

(def (map fn lis)
     (if (null? lis)
	 nil
	 (cons 
	  (fn.call (car lis))
	  (map fn (cdr lis)))))

(def (append *lis)
     (= app_list nil)
     (lis.map (block (li)
		      (= app_list (cons li app_list))))
     app_list)

(def append2 (xs ys)
    (if (null? xs)
        ys
      (cons (car xs) (append2 (cdr xs) ys))))

(def (reverse lis)
     (= rev (lambda (lis retlis)
	      (if (null? lis)
		  retlis
		(rev.call (cdr lis) (cons (car lis) retlis)))))
     (rev.call lis nil))
	      
		
